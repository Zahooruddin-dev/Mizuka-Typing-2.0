{"version":3,"file":"static/js/268.35b9a959.chunk.js","mappings":"AACAA,KAAKC,UAAY,SAAUC,GACzB,IACE,MAAwDA,EAAEC,KAAlDC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAAmBC,EAA1C,EAA0CA,UAG1C,GAA6B,kBAAlBF,GAA8BA,EAAgB,EACvD,MAAM,IAAIG,MAAM,4BAElB,GAAiC,kBAAtBF,GAAuD,kBAAdC,EAClD,MAAM,IAAIC,MAAM,uBAIlB,IAGMC,EAAUJ,EAAgB,EAHLK,KAAKC,KAAKL,EAAoBC,GAAa,GAAM,MAMtEK,EAAgBF,KAAKG,MAAe,IAATJ,GAAgB,IAEjDK,YAAY,CAAEC,SAAS,EAAMC,IAAKJ,IAClC,MAAOK,GACPH,YAAY,CAAEC,SAAS,EAAOE,MAAOA,EAAMC","sources":["worker/calculateRawWpmWorker.js"],"sourcesContent":["// eslint-disable-next-line no-restricted-globals\nself.onmessage = function (e) {\n  try {\n    const { rawKeyStrokes, countDownConstant, countDown } = e.data;\n    \n    // Validate inputs\n    if (typeof rawKeyStrokes !== 'number' || rawKeyStrokes < 0) {\n      throw new Error('Invalid keystrokes value');\n    }\n    if (typeof countDownConstant !== 'number' || typeof countDown !== 'number') {\n      throw new Error('Invalid time values');\n    }\n\n    // Calculate elapsed time in minutes, prevent division by zero\n    const elapsedTimeMinutes = Math.max((countDownConstant - countDown) / 60.0, 0.016); // Minimum 1 second\n\n    // Calculate raw WPM (5 characters = 1 word)\n    const rawWpm = (rawKeyStrokes / 5) / elapsedTimeMinutes;\n    \n    // Round to 2 decimal places for consistency\n    const roundedRawWpm = Math.round(rawWpm * 100) / 100;\n\n    postMessage({ success: true, wpm: roundedRawWpm });\n  } catch (error) {\n    postMessage({ success: false, error: error.message });\n  }\n};"],"names":["self","onmessage","e","data","rawKeyStrokes","countDownConstant","countDown","Error","rawWpm","Math","max","roundedRawWpm","round","postMessage","success","wpm","error","message"],"sourceRoot":""}