{"version":3,"file":"static/js/514.489e435b.chunk.js","mappings":"AACAA,KAAKC,UAAY,SAAUC,GACzB,MAOIA,EAAEC,KANJC,EADF,EACEA,UACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,kBACAC,EAJF,EAIEA,WACAC,EALF,EAKEA,cACAC,EANF,EAMEA,oBAGEC,GAAe,EACfC,EAAY,EAEhB,OAAQN,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACHK,EAAeN,EAAY,IAAM,EACjCO,EAAY,EACZ,MAKF,QACED,GAAe,EACfC,EAAY,EAGhB,GAAID,EAAc,CAChB,IAAME,EAAUN,EAAkBO,OAASF,EAS3CG,YAAY,CAAEC,SAPG,CACfC,IAAKT,EACLU,OAAQT,EACRU,KAAMN,EACNO,MAAOV,GAGeW,aAAa","sources":["worker/trackHistoryWorker.js"],"sourcesContent":["// eslint-disable-next-line no-restricted-globals\nself.onmessage = function (e) {\n  const {\n    countDown,\n    countDownConstant,\n    typingTestHistory,\n    roundedWpm,\n    roundedRawWpm,\n    incorrectCharsCount,\n  } = e.data;\n\n  let shouldRecord = false;\n  let increment = 1;\n\n  switch (countDownConstant) {\n    case 90:\n    case 60:\n    case 30:\n      shouldRecord = countDown % 5 === 0;\n      increment = 5;\n      break;\n    case 15:\n      shouldRecord = true;\n      increment = 1;\n      break;\n    default:\n      shouldRecord = true;\n      increment = 1;\n  }\n\n  if (shouldRecord) {\n    const newTime = typingTestHistory.length * increment;\n\n    const newEntry = {\n      wpm: roundedWpm,\n      rawWpm: roundedRawWpm,\n      time: newTime,\n      error: incorrectCharsCount,\n    };\n\n    postMessage({ newEntry, resetErrors: true });\n  }\n};\n"],"names":["self","onmessage","e","data","countDown","countDownConstant","typingTestHistory","roundedWpm","roundedRawWpm","incorrectCharsCount","shouldRecord","increment","newTime","length","postMessage","newEntry","wpm","rawWpm","time","error","resetErrors"],"sourceRoot":""}